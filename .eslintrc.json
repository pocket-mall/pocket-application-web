{
	"root": true,
	"ignorePatterns": [
		"projects/**/*"
	],
	"overrides": [
		{
			"files": [
				"*.ts"
			],
			"parserOptions": {
				"project": [
					"tsconfig.json",
					"tsconfig.app.json",
					"tsconfig.spec.json"
				],
				"sourceType": "module"
			},
			"extends": [
				"eslint:recommended",
				"plugin:@angular-eslint/recommended",
				"plugin:@angular-eslint/template/process-inline-templates",
				"plugin:@typescript-eslint/recommended",
				"plugin:import/errors",
				"plugin:import/recommended",
				"plugin:import/warnings",
				"plugin:jasmine/recommended",
				"plugin:prettier/recommended",
				"plugin:rxjs/recommended"
			],
			"plugins": [
				"@angular-eslint",
				"@typescript-eslint",
				"import",
				"jasmine",
				"prettier",
				"rxjs"
			],
			"rules": {
				"import/namespace": "off",
				"import/named": "off",
				"@typescript-eslint/ban-ts-comment": "off",
				"@typescript-eslint/no-explicit-any": "warn",
				"@angular-eslint/component-class-suffix": "error",
				"@angular-eslint/directive-class-suffix": "error",
				"@angular-eslint/directive-selector": [
					"error",
					{
						"type": "attribute",
						"prefix": "pkt",
						"style": "camelCase"
					}
				],
				"@angular-eslint/component-selector": [
					"error",
					{
						"type": "element",
						"prefix": "pkt",
						"style": "kebab-case"
					}
				],
				"@angular-eslint/no-host-metadata-property": "error",
				"@angular-eslint/no-input-rename": "error",
				"@angular-eslint/no-inputs-metadata-property": "error",
				"@angular-eslint/no-output-on-prefix": "error",
				"@angular-eslint/no-output-rename": "error",
				"@angular-eslint/no-outputs-metadata-property": "error",
				"@angular-eslint/use-lifecycle-interface": "error",
				"@angular-eslint/use-pipe-transform-interface": "error",
				"@typescript-eslint/array-type": [
					"error",
					{
						"default": "generic"
					}
				],
				"@typescript-eslint/consistent-type-assertions": "error",
				"@typescript-eslint/consistent-type-definitions": "error",
				"@typescript-eslint/dot-notation": "off",
				"@typescript-eslint/explicit-member-accessibility": [
					"error",
					{
						"accessibility": "explicit",
						"overrides": {
							"accessors": "explicit",
							"constructors": "explicit",
							"parameterProperties": "explicit"
						}
					}
				],
				"@typescript-eslint/explicit-function-return-type": [
					"error",
					{
						"allowExpressions": true
					}
				],
				"@typescript-eslint/member-delimiter-style": [
					"error",
					{
						"multiline": {
							"delimiter": "semi",
							"requireLast": true
						},
						"singleline": {
							"delimiter": "semi",
							"requireLast": false
						}
					}
				],
				"@typescript-eslint/member-ordering": "error",
				"@typescript-eslint/naming-convention": [
					"error",
					{
						"selector": "typeLike",
						"format": ["PascalCase"]
					}
				],
				"@typescript-eslint/no-empty-function": "off",
				"@typescript-eslint/no-empty-interface": "error",
				"@typescript-eslint/no-inferrable-types": "off",
				"@typescript-eslint/no-misused-new": "error",
				"@typescript-eslint/no-non-null-assertion": "error",
				"@typescript-eslint/no-shadow": "error",
				"@typescript-eslint/no-unused-expressions": [
					"error",
					{
						"allowTernary": true
					}
				],
				"@typescript-eslint/prefer-function-type": "error",
				"@typescript-eslint/prefer-readonly": "error",
				"@typescript-eslint/quotes": [
					"error",
					"single",
					{
						"allowTemplateLiterals": true,
						"avoidEscape": true
					}
				],
				"@typescript-eslint/semi": ["error", "always"],
				"@typescript-eslint/type-annotation-spacing": "error",
				"@typescript-eslint/typedef": [
					"error",
					{
						"parameter": true,
						"arrowParameter": true,
						"propertyDeclaration": true,
						"variableDeclaration": true,
						"memberVariableDeclaration": true,
						"objectDestructuring": true,
						"arrayDestructuring": true
					}
				],
				"@typescript-eslint/unified-signatures": "error",
				"@typescript-eslint/ban-types": "warn",
				"arrow-body-style": "error",
				"constructor-super": "error",
				"curly": "error",
				"eol-last": "error",
				"eqeqeq": ["error", "smart"],
				"guard-for-in": "error",
				"id-blacklist": "off",
				"id-match": "off",
				"import/no-deprecated": "off",
				"import/no-unresolved": "off",
				"import/order": [
					"error",
					{
						"alphabetize": {
							"order": "asc",
							"caseInsensitive": true
						},
						"newlines-between": "never"
					}
				],
				"max-len": [
					"warn",
					{
						"code": 140
					}
				],
				"new-parens": "error",
				"no-bitwise": "error",
				"no-caller": "error",
				"no-console": [
					"error",
					{
						"allow": ["warn", "error"]
					}
				],
				"no-debugger": "error",
				"no-duplicate-imports": "error",
				"no-empty": "off",
				"no-eval": "error",
				"no-fallthrough": "error",
				"no-multiple-empty-lines": [
					"error",
					{
						"max": 1
					}
				],
				"no-new-wrappers": "error",
				"no-restricted-imports": ["error", "rxjs/Rx"],
				"no-shadow": "off",
				"no-throw-literal": "error",
				"no-trailing-spaces": "error",
				"no-undef-init": "off",
				"no-undef": "off",
				"no-case-declarations": "warn",
				"no-mixed-spaces-and-tabs": "off",
				"no-unused-labels": "error",
				"no-var": "error",
				"brace-style": "warn",
				"prefer-const": "error",
				"radix": "error",
				"rxjs/no-internal": "error",
				"rxjs/no-unsafe-takeuntil": "error",
				"spaced-comment": [
					"error",
					"always",
					{
						"markers": ["/"]
					}
				],
				"rxjs/no-async-subscribe": "off",
				"rxjs/no-ignored-observable": "off",
				"rxjs/no-ignored-subscription": "warn",
				"rxjs/no-nested-subscribe": "warn",
				"rxjs/no-unbound-methods": "off",
				"rxjs/throw-error": "off",
				"rxjs/no-implicit-any-catch": "off",
				"rxjs/no-sharereplay": "warn",
				"rxjs/no-ignored-replay-buffer": "warn"
			}
		},
		{
			"files": [
				"*.html"
			],
			"extends": [
				"plugin:@angular-eslint/template/recommended"
			],
			"rules": {}
		}
	]
}
